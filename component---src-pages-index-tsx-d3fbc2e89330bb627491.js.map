{"version":3,"sources":["webpack:///./src/utils/visible.ts","webpack:///./src/components/category/item/index.tsx","webpack:///./src/components/category/index.tsx","webpack:///./src/components/thumbnail-item/index.tsx","webpack:///./src/components/contents/index.tsx","webpack:///./src/utils/storage/core.ts","webpack:///./src/utils/storage/browser.ts","webpack:///./src/utils/storage/sessionStorage.ts","webpack:///./src/utils/storage/index.ts","webpack:///./src/utils/storage/localStorage.ts","webpack:///./src/pages/index.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./src/types.ts","webpack:///./src/utils/dom.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/head/index.tsx","webpack:///./src/components/theme-switch/index.tsx","webpack:///./src/components/top/index.tsx","webpack:///./src/components/header/index.tsx","webpack:///./src/components/footer/index.tsx","webpack:///./src/layout/index.tsx","webpack:///./src/components/bio/index.tsx","webpack:///./src/constants/index.ts","webpack:///./src/constants/meta.ts","webpack:///./src/constants/lang.ts"],"names":["observer","Item","_ref","title","category","selectCategory","react_default","a","createElement","className","role","aria-selected","onClick","Category","categories","id","style","margin","rhythm","item_Item","map","item","idx","key","ROOT_ID","TARGET_CLASS","VISIBLE_RECOGNIZE_CLASS","INTERSECTION_OBSERVER_ROOT_MARGIN","INTERSECTION_OBSERVER_THRESHOLD","observeCallback","entries","filter","isIntersecting","forEach","_ref2","target","Dom","observerTargeting","el","observe","disconnect","Error","Promise","resolve","ThumbnailItem","node","gatsby_browser_entry","to","fields","slug","frontmatter","dangerouslySetInnerHTML","__html","excerpt","Contents","posts","countOfInitialPost","count","refinedPosts","useMemo","CategoryType","ALL","slice","Fragment","_ref3","index","thumbnail_item_ThumbnailItem","isEmpty","storage","getValueFrom","rawData","getItem","JSON","parse","setValueTo","data","setItem","stringify","localStorage","window","sessionStorage","setValueToSessionStorage","partial_default","getValueFromSessionStorage","SESSION_STORAGE_KEY","__webpack_exports__","defaultValue","location","initialCount","initialCategory","Storage","useState","countRef","useRef","_useState2","setCategory","pathPrefix","siteMetadata","site","configs","allMarkdownRemark","edges","uniq_default","useEffect","IntersectionObserver","root","rootMargin","threshold","then","current","val","layout","head","HOME_TITLE","keywords","bio","category_Category","contents_Contents","pageQuery","__webpack_require__","r","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","GitHubTheme","overrideThemeStyles","boxShadow","textDecoration","color","a.gatsby-resp-image-link","a:hover","h1","fontWeight","lineHeight","fontFamily","h2","marginTop","marginBottom","ul","li","typography","Typography","scale","m","module","exports","require","default","ThemeType","getElements","getElement","addClass","addClassToBody","removeClassToBody","hasClassOfBody","selector","document","querySelectorAll","querySelector","element","classList","add","getBody","remove","removeClass","contains","hasClass","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Head","description","_ref$lang","lang","_ref$meta","meta","_ref$keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","ThemeSwitch","_useState","checked","setChecked","handleChange","theme","DARK","LIGHT","getTheme","toggleTheme","htmlFor","react_switch_default","onChange","height","width","checkedIcon","uncheckedIcon","offColor","offHandleColor","onColor","onHandleColor","Top","rootPath","isRoot","marginLeft","marginRight","maxWidth","theme_switch_ThemeSwitch","Header","Footer","href","layout_Layout","Layout","_ref$pathPrefix","top_Top","padding","header_Header","footer_Footer","Bio","react__WEBPACK_IMPORTED_MODULE_2___default","bioQuery","_data$site$siteMetada","social","introduction","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","alt","borderRadius","github","medium","twitter","facebook","_public_static_d_1177532027_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-index-tsx-d3fbc2e89330bb627491.js","sourcesContent":["import * as Dom from './dom'\n\nconst ROOT_ID = '#___gatsby'\nexport const TARGET_CLASS = 'observed'\nconst VISIBLE_RECOGNIZE_CLASS = 'visible'\nconst INTERSECTION_OBSERVER_ROOT_MARGIN = '20px'\nconst INTERSECTION_OBSERVER_THRESHOLD = 0.8\n\nlet observer: any\n\ninterface Entry {\n  isIntersecting: boolean\n  target: any\n}\n\nfunction observeCallback(entries: Entry[]) {\n  return entries\n    .filter(({ isIntersecting }) => isIntersecting)\n    .forEach(({ target }) => Dom.addClass(target, VISIBLE_RECOGNIZE_CLASS))\n}\n\nfunction observerTargeting() {\n  return Dom.getElements(`.${TARGET_CLASS}`).forEach(el => observer.observe(el))\n}\n\nfunction disconnect() {\n  if (!observer) {\n    throw Error('Not found IntersectionObserver instance')\n  }\n  return Promise.resolve(observer.disconnect())\n}\n\nexport function init() {\n  observer = new IntersectionObserver(observeCallback, {\n    root: Dom.getElement(ROOT_ID),\n    rootMargin: INTERSECTION_OBSERVER_ROOT_MARGIN,\n    threshold: INTERSECTION_OBSERVER_THRESHOLD,\n  })\n\n  return observerTargeting()\n}\n\nexport function destroy() {\n  return disconnect().then(() => (observer = null))\n}\n\nexport function refreshObserver() {\n  return disconnect().then(observerTargeting)\n}\n","import React from 'react'\n\ninterface ItemProps {\n  title: string\n  category: any\n  selectCategory: any\n}\n\nexport const Item: React.FC<ItemProps> = ({ title, category, selectCategory }) => (\n  <li\n    className=\"item\"\n    role=\"tab\"\n    aria-selected={category === title ? 'true' : 'false'}\n  >\n    <div onClick={() => selectCategory(title)}>{title}</div>\n  </li>\n)\n","import React from 'react'\n\nimport { Item } from './item'\nimport { rhythm } from '../../utils/typography'\n\nimport './index.scss'\n\ninterface CategoryProps {\n  categories: string[]\n  category: string\n  selectCategory: (category: string) => void\n}\n\nexport const Category: React.FC<CategoryProps> = ({ categories, category, selectCategory }) => (\n  <ul\n    className=\"category-container\"\n    role=\"tablist\"\n    id=\"category\"\n    style={{\n      margin: `0 -${rhythm(3 / 4)}`,\n    }}\n  >\n    <Item title={'All'} category={category} selectCategory={selectCategory} />\n    {categories.map((item, idx) => (\n      <Item\n        key={idx}\n        title={item}\n        category={category}\n        selectCategory={selectCategory}\n      />\n    ))}\n  </ul>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { TARGET_CLASS } from '../../utils/visible'\n\nimport './index.scss'\n\ninterface ThumbnailItemProps {\n  node: any\n}\n\nexport const ThumbnailItem: React.FC<ThumbnailItemProps> = ({ node }: any) => (\n  <Link className={`thumbnail ${TARGET_CLASS}`} to={node.fields.slug}>\n    <div key={node.fields.slug}>\n      <h3>{node.frontmatter.title || node.fields.slug}</h3>\n      <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n    </div>\n  </Link>\n)\n","import React, { useMemo } from 'react'\n\nimport { ThumbnailItem } from '../thumbnail-item'\nimport { CategoryType } from '../../types'\n\ninterface ContentsProps {\n  posts: any[]\n  countOfInitialPost: any\n  count: any\n  category: any\n}\n\nexport const Contents: React.FC<ContentsProps> = ({ posts, countOfInitialPost, count, category }) => {\n  const refinedPosts = useMemo(() =>\n    posts\n      .filter(\n        ({ node }: any) =>\n          category === CategoryType.ALL ||\n          node.frontmatter.category === category\n      )\n      .slice(0, count * countOfInitialPost), [category]\n  )\n\n  return (\n    <>\n      {refinedPosts.map(({ node }, index) => (\n        <ThumbnailItem node={node} key={`item_${index}`} />\n      ))}\n    </>\n  )\n}\n","function isEmpty(storage: any) {\n  return !storage || storage === {}\n}\n\nexport function getValueFrom(storage: any, key: any) {\n  if (isEmpty(storage)) {\n    return\n  }\n  const rawData = storage.getItem(key)\n\n  if (!rawData) {\n    return\n  }\n  return JSON.parse(rawData)\n}\n\nexport function setValueTo(storage: any, key: any, data: any) {\n  if (isEmpty(storage)) {\n    return\n  }\n  return storage.setItem(key, JSON.stringify(data))\n}\n","export const localStorage = typeof window !== 'undefined' ? window.localStorage : null\nexport const sessionStorage = typeof window !== 'undefined' ? window.sessionStorage : null\n","import _ from 'lodash'\n\nimport { setValueTo, getValueFrom } from './core'\nimport { sessionStorage } from './browser'\n\nexport const setValueToSessionStorage = _.partial(setValueTo, sessionStorage)\nexport const getValueFromSessionStorage = _.partial(\n  getValueFrom,\n  sessionStorage\n)\n","import {\n  setValueToSessionStorage,\n  getValueFromSessionStorage,\n} from './sessionStorage'\nimport {\n  setValueToLocalStorage,\n  getValueFromLocalStorage,\n} from './localStorage'\n\nconst SESSION_STORAGE_KEY = '__felog_session_storage_key__'\nconst LOCAL_STORAGE_KEY = '__felog_local_storage_key__'\n\nexport function getCount(defaultValue: number): number {\n  return (\n    getValueFromSessionStorage(`${SESSION_STORAGE_KEY}/count`) || defaultValue\n  )\n}\n\nexport function setCount(val: number): number {\n  return setValueToSessionStorage(`${SESSION_STORAGE_KEY}/count`, val)\n}\n\nexport function getCategory(defaultValue: string): string {\n  return (\n    getValueFromSessionStorage(`${SESSION_STORAGE_KEY}/category`) || defaultValue\n  )\n}\n\nexport function setCategory(val: string): string {\n  return setValueToSessionStorage(`${SESSION_STORAGE_KEY}/category`, val)\n}\n\nexport function getData<T>(): T {\n  return getValueFromLocalStorage(LOCAL_STORAGE_KEY)\n}\n\nexport function setData<T>(val: T): T {\n  return setValueToLocalStorage(LOCAL_STORAGE_KEY, val)\n}\n","import _ from 'lodash'\n\nimport { setValueTo, getValueFrom } from './core'\nimport { localStorage } from './browser'\n\nexport const setValueToLocalStorage = _.partial(setValueTo, localStorage)\nexport const getValueFromLocalStorage = _.partial(getValueFrom, localStorage)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { graphql } from 'gatsby'\nimport _ from 'lodash'\n\nimport { Layout } from '../layout'\nimport { Bio } from '../components/bio'\nimport { Head } from '../components/head'\nimport { Category } from '../components/category'\nimport { Contents } from '../components/contents'\n\nimport * as Storage from '../utils/storage'\nimport * as IOManager from '../utils/visible'\n\nimport { CategoryType } from '../types'\nimport { HOME_TITLE } from '../constants'\n\nexport default ({ data, location }: any) => {\n  const initialCount = Storage.getCount(1)\n  const initialCategory = Storage.getCategory(CategoryType.ALL)\n  const [count] = useState(initialCount)\n  const countRef = useRef(count)\n  const [category, setCategory] = useState(initialCategory)\n\n  const { pathPrefix, site } = data\n  const { siteMetadata } = site\n  const { countOfInitialPost } = siteMetadata.configs\n  const posts = data.allMarkdownRemark.edges\n  const categories = _.uniq<string>(posts.map(({ node }: any) => node.frontmatter.category))\n\n  useEffect(() => {\n    IOManager.init()\n\n    return () => {\n      IOManager.destroy()\n    }\n  }, [])\n\n  useEffect(() => {\n    countRef.current = count\n    IOManager.refreshObserver()\n    Storage.setCount(count)\n    Storage.setCategory(category)\n  })\n\n  const selectCategory = (category: string) => {\n    setCategory(category)\n  }\n\n  return (\n    <Layout pathPrefix={pathPrefix} location={location} title={siteMetadata.title}>\n      <Head title={HOME_TITLE} keywords={siteMetadata.keywords} />\n      <Bio />\n      <Category\n        categories={categories}\n        category={category}\n        selectCategory={selectCategory}\n      />\n      <Contents\n        posts={posts}\n        countOfInitialPost={countOfInitialPost}\n        count={count}\n        category={category}\n      />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      pathPrefix\n      siteMetadata {\n        title\n        configs {\n          countOfInitialPost\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { ne: null } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            category\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from 'typography'\nimport GitHubTheme from 'typography-theme-github'\n\nGitHubTheme.overrideThemeStyles = () => {\n  return {\n    a: {\n      boxShadow: `none`,\n      textDecoration: `none`,\n      color: `#0687f0`,\n    },\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n      textDecoration: `none`,\n    },\n\n    'a:hover': {\n      textDecoration: `none`,\n    },\n\n    h1: {\n      fontWeight: 800,\n      lineHeight: 1.2,\n      fontFamily: 'Catamaran',\n    },\n\n    h2: {\n      fontWeight: 700,\n      lineHeight: 1.2,\n      marginTop: '56px',\n      marginBottom: '20px',\n      fontFamily: 'Catamaran',\n    },\n\n    ul: {\n      marginBottom: '6px',\n    },\n\n    li: {\n      marginBottom: '2px',\n    },\n  }\n}\n\nconst typography = new Typography(GitHubTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","export enum CategoryType {\n  ALL = 'All'\n}\n\nexport enum ThemeType {\n  DARK = 'dark',\n  LIGHT = 'light'\n}\n\nexport interface Post {\n  node: string\n}\n","const BODY = 'body'\n\nexport const getElements = (selector: string) => document.querySelectorAll(selector)\nexport const getElement = (selector: string) => document.querySelector(selector)\nexport const addClass = (element: Element, className: string) => !!element ? element.classList.add(className) : null\nexport const removeClass = (element: Element, className: string) => element!.classList.remove(className)\nexport const hasClass = (element: Element, className: string) => element!.classList.contains(className)\nexport const getBody = () => getElement(BODY)\nexport const addClassToBody = (className: string) => addClass(getBody()!, className)\nexport const removeClassToBody = (className: string) => removeClass(getBody()!, className)\nexport const hasClassOfBody = (className: string) => hasClass(getBody()!, className)\nexport const getRect = (className: string) => getElement(className)!.getBoundingClientRect()\nexport const getPosY = (className: string) => getRect(className)!.top\n\nexport const getDocumentHeight = () => document.documentElement.offsetHeight\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface HeadProps {\n  description?: string,\n  lang?: string,\n  meta?: [],\n  keywords?: string[],\n  title: string,\n}\n\nexport const Head: React.FC<HeadProps> = ({ description, lang = 'en', meta = [], keywords = [], title }) => (\n  <StaticQuery\n    query={detailsQuery}\n    render={data => {\n      const metaDescription =\n        description || data.site.siteMetadata.description\n      return (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n          meta={[\n            {\n              name: `description`,\n              content: metaDescription,\n            },\n            {\n              property: `og:title`,\n              content: title,\n            },\n            {\n              property: `og:description`,\n              content: metaDescription,\n            },\n            {\n              property: `og:type`,\n              content: `website`,\n            },\n            {\n              name: `twitter:card`,\n              content: `summary`,\n            },\n            {\n              name: `twitter:creator`,\n              content: data.site.siteMetadata.author,\n            },\n            {\n              name: `twitter:title`,\n              content: title,\n            },\n            {\n              name: `twitter:description`,\n              content: metaDescription,\n            },\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                  name: `keywords`,\n                  content: keywords.join(`, `),\n                }\n                : []\n            )\n            .concat(meta)}\n        />\n      )\n    }}\n  />\n)\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { useState, useEffect } from 'react'\nimport Switch from 'react-switch'\n\nimport * as Dom from '../../utils/dom'\nimport { ThemeType } from '../../types'\n\nimport './index.scss'\n\nfunction getTheme(checked: boolean) {\n  return checked ? ThemeType.DARK : ThemeType.LIGHT\n}\n\nfunction toggleTheme(theme: ThemeType) {\n  switch (theme) {\n    case ThemeType.LIGHT: {\n      Dom.addClassToBody(ThemeType.LIGHT)\n      Dom.removeClassToBody(ThemeType.DARK)\n      break\n    }\n    case ThemeType.DARK: {\n      Dom.addClassToBody(ThemeType.DARK)\n      Dom.removeClassToBody(ThemeType.LIGHT)\n      break\n    }\n  }\n}\n\nexport const ThemeSwitch: React.FC = () => {\n  const [checked, setChecked] = useState(false)\n\n  const handleChange = (checked: boolean) => {\n    const theme = getTheme(checked)\n\n    setChecked(checked)\n    toggleTheme(theme)\n  }\n\n  useEffect(() => {\n    const checked = Dom.hasClassOfBody(ThemeType.DARK)\n\n    handleChange(checked)\n  }, [])\n\n  return (\n    <div className=\"switch-container\">\n      <label htmlFor=\"normal-switch\">\n        <Switch\n          onChange={handleChange}\n          checked={checked}\n          id=\"normal-switch\"\n          height={24}\n          width={48}\n          checkedIcon={<div className=\"icon checkedIcon\">D</div>}\n          uncheckedIcon={<div className=\"icon uncheckedIcon\">L</div>}\n          offColor={'#d9dfe2'}\n          offHandleColor={'#fff'}\n          onColor={'#999'}\n          onHandleColor={'#282c35'}\n        />\n      </label>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n// import { GitHubIcon } from '../social-share/github-icon'\nimport { rhythm } from '../../utils/typography'\nimport { ThemeSwitch } from '../theme-switch'\n\nimport './index.scss'\n\ninterface TopProps {\n  title: string\n  location: Location\n  rootPath: string\n}\n\nexport const Top: React.FC<TopProps> = ({ title, location, rootPath }) => {\n  const isRoot = location.pathname === rootPath\n  return (\n    <div\n      className=\"top\"\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(24),\n      }}\n    >\n      {!isRoot && (\n        <Link to={`/`} className=\"link\">\n          {title}\n        </Link>\n      )}\n      {/* <GitHubIcon /> */}\n      <ThemeSwitch />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport './index.scss'\n\ninterface HeaderProps {\n  title: string\n  location: Location\n  rootPath: string\n}\n\nexport const Header: React.FC<HeaderProps> = ({ title, location, rootPath }) => {\n  const isRoot = location.pathname === rootPath\n\n  return isRoot\n    ? (\n      <h1 className=\"home-header\">\n        <Link to={`/`} className=\"link\">\n          {title}\n        </Link>\n      </h1>\n    )\n    : (\n      <></>\n    )\n}\n","import React from 'react'\n\nimport './index.scss'\n\nexport const Footer = () => (\n  <footer className=\"footer\">\n    ©<a href=\"https://github.com/JoonsungUm\">Joonsung Um</a>, Built with{' '}\n    <a href=\"https://github.com/JaeYeopHan/gatsby-starter-bee\">\n      Gatsby-starter-bee\n    </a>\n  </footer>\n)\n","import React from 'react'\n\nimport { Top } from '../components/top'\nimport { Header } from '../components/header'\nimport { Footer } from '../components/footer'\nimport { rhythm } from '../utils/typography'\n\nimport './index.scss'\n\ninterface LayoutProps {\n  pathPrefix: string\n  location: any\n  title: string\n}\n\nexport const Layout: React.FC<LayoutProps> = ({ pathPrefix = `/`, location, title, children }) => (\n  <React.Fragment>\n    <Top title={title} location={location} rootPath={pathPrefix} />\n    <div\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(24),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <Header title={title} location={location} rootPath={pathPrefix} />\n      {children}\n      <Footer />\n    </div>\n  </React.Fragment>\n)\n\n","import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport './index.scss'\n\nexport const Bio = () => (\n  <StaticQuery\n    query={bioQuery}\n    render={data => {\n      const { author, social, introduction } = data.site.siteMetadata\n\n      return (\n        <div className=\"bio\">\n          <div className=\"author\">\n            <div className=\"author-description\">\n              <Image\n                className=\"author-image\"\n                fixed={data.avatar.childImageSharp.fixed}\n                alt={author}\n                style={{\n                  borderRadius: `100%`,\n                }}\n              />\n              <div className=\"author-name\">\n                <span className=\"author-name-prefix\">Written by</span>\n                <Link to={'/about'} className=\"author-name-content\">\n                  <span>@{author}</span>\n                </Link>\n                <div className=\"author-introduction\">{introduction}</div>\n                <p className=\"author-socials\">\n                  {social.github && (\n                    <a href={`https://github.com/${social.github}`}>GitHub</a>\n                  )}\n                  {social.medium && (\n                    <a href={`https://medium.com/${social.medium}`}>Medium</a>\n                  )}\n                  {social.twitter && (\n                    <a href={`https://twitter.com/${social.twitter}`}>\n                      Twitter\n                    </a>\n                  )}\n                  {social.facebook && (\n                    <a href={`https://www.facebook.com/${social.facebook}`}>\n                      Facebook\n                    </a>\n                  )}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }}\n  />\n)\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile.png/\" }) {\n      childImageSharp {\n        fixed(width: 72, height: 72) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        introduction\n        social {\n          twitter\n          github\n          medium\n          facebook\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n","export * from './meta'\nexport * from './lang'\n","export const HOME_TITLE = 'Home'\n","export const KOREAN = 'ko'\nexport const ENGLISH = 'en'\n"],"sourceRoot":""}