{"data":{"site":{"pathPrefix":"","siteMetadata":{"title":"Joonsung Um's blog","author":"JoonsungUm","siteUrl":"","locale":"ko","comment":{"disqusShortName":"","utterances":"JoonsungUm/JoonsungUm.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"537ecc1c-e83f-5d36-8eb8-6ea7e0fcd2c7","excerpt":"타입스크립트를 사용하기 시작한 뒤로 type을 기술할 때, 일반적인 상황에서는 특별한 고민없이 interface를 사용하고 있었다. 리액트 스펙문서에서도 특별한 상황이 아니라면 interface의 사용을 권장하고 있기 때문이었다. 최근에 React component에서 사용되는 props와 state의 타입을 기술할 때는 type을 사용하여 작성하는 방법을 고려해보라는 글들을 보게되었고 그에 관해 알아본 내용들을 적어 보았다. Typescript Handbook의 Type Aliases…","html":"<p>타입스크립트를 사용하기 시작한 뒤로 type을 기술할 때, 일반적인 상황에서는 특별한 고민없이 interface를 사용하고 있었다. 리액트 스펙문서에서도 특별한 상황이 아니라면 interface의 사용을 권장하고 있기 때문이었다. 최근에 React component에서 사용되는 props와 state의 타입을 기술할 때는 type을 사용하여 작성하는 방법을 고려해보라는 글들을 보게되었고 그에 관해 알아본 내용들을 적어 보았다.</p>\n<h2 id=\"typescript-handbook의-type-aliases-section\"><a href=\"#typescript-handbook%EC%9D%98-type-aliases-section\" aria-label=\"typescript handbook의 type aliases section permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#310-type-aliases\">Typescript Handbook의 Type Aliases section</a></h2>\n<p>얼마 전 블로그를 만들어야겠다고 생각했을 때, 가장 중요하게 생각했던 것은 얼마나 포터블하냐는 것이었다. 언제든지 올린 데이터 모두를 편리한 포맷으로 내려받을 수 있도록 특정 플랫폼에 얽매이고 싶지 않았고 가능하다면 마크다운을 사용하고 싶었다.</p>\n<p>예전에 싸이월드가 망하면서 즐거웠던 시절의 사진을 몽창 잃어버린 기억이 있기 때문에 퍼블릭 export API가 잘 만들어져 있는 서비스가 아니면 사용하고 싶지 않았고 국내 서비스 중 스팀잇이나 브런치 등을 들어본 적은 있지만, export 환경이 잘 되어있는지는 왠지 알아보고 싶지도 않았다. 😖</p>\n<p>미디움을 비롯한 해외 서비스형 블로그 플랫폼들도 비슷한 이유로 호감이 가지 않았으며, 결국 셀프호스팅 쪽으로 마음이 기울기 시작했다.</p>","timeToRead":1,"frontmatter":{"title":"Typescript와 React를 사용할 때, props와 state의 타입을 작성하는 방법에 대한 고민","date":"2019-02-13T20:44:03.000Z"}}},"pageContext":{"slug":"/introduce/2019-02-21-react-component-type-of-interface/","previous":null,"next":{"fields":{"slug":"/introduce/2019-02-13-introducing-this-blog/"},"frontmatter":{"title":"Introducing This Blog","category":"introduce"}}}}