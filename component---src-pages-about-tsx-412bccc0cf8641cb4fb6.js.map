{"version":3,"sources":["webpack:///./src/pages/about.tsx","webpack:///./src/constants/meta.ts","webpack:///./src/constants/themes.ts","webpack:///./src/constants/index.ts","webpack:///./src/constants/lang.ts","webpack:///./src/utils/typography.ts"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_utils_typography__WEBPACK_IMPORTED_MODULE_1__","_constants__WEBPACK_IMPORTED_MODULE_2__","AboutPage","_ref","data","lang","useState","Lang","resume","allMarkdownRemark","edges","filter","_ref2","node","frontmatter","map","_ref3","a","createElement","style","marginLeft","marginRight","maxWidth","rhythm","padding","dangerouslySetInnerHTML","__html","html","Themes","Object","freeze","DARK","LIGHT","DEFAULT_CATEGORY","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","GitHubTheme","overrideThemeStyles","boxShadow","textDecoration","color","a.gatsby-resp-image-link","a:hover","h1","fontWeight","lineHeight","fontFamily","h2","marginTop","marginBottom","ul","li","typography","Typography","scale"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAkCeU,UAxBG,SAAAC,GAA8B,IAA3BC,EAA2BD,EAA3BC,KACZC,EAAQC,mBAASC,KADsB,GAIxCC,EAFUJ,EAAKK,kBAAkBC,MAGpCC,OAAO,SAAAC,GAAA,OAAAA,EAAGC,KAAqBC,YAAYT,OAASA,IACpDU,IAAI,SAAAC,GAAA,OAAAA,EAAGH,OAAsB,GAEhC,OACEf,EAAAmB,EAAAC,cAAA,OACEC,MAAO,CACLC,WAAU,OACVC,YAAW,OACXC,SAAUC,YAAO,IACjBC,QAAYD,YAAO,IAAZ,IAAoBA,YAAO,KAA3B,IAAqCA,YAAO,KAA5C,IAAoDA,YACzD,OAIJzB,EAAAmB,EAAAC,cAAA,OAAKO,wBAAyB,CAAEC,OAAQlB,EAAOmB,UAO9C,IAAM/B,EAAS,sDCpCf,ICGMgC,EAASC,OAAOC,OAAO,CAClCC,KAAM,OACNC,MAAO,UCLTxC,EAAAG,EAAAD,EAAA,sBAAAuC,IAAAzC,EAAAG,EAAAD,EAAA,qBFA0B,SEA1BF,EAAAG,EAAAD,EAAA,qBCCuB,ODDvBF,EAAAG,EAAAD,EAAA,sBAAAkC,IAIO,IAAMK,EAAmB,wCEJhCzC,EAAAG,EAAAD,EAAA,sBAAA6B,IAAA,IAAAW,EAAA1C,EAAA,KAAA2C,EAAA3C,EAAAO,EAAAmC,GAAAE,EAAA5C,EAAA,KAAA6C,EAAA7C,EAAAO,EAAAqC,GAGAE,IAAYC,oBAAsB,WAChC,MAAO,CACLtB,EAAG,CACDuB,UAAS,OACTC,eAAc,OACdC,MAAK,WAEPC,2BAA4B,CAC1BH,UAAS,OACTC,eAAc,QAGhBG,UAAW,CACTH,eAAc,QAGhBI,GAAI,CACFC,WAAY,IACZC,WAAY,IACZC,WAAY,aAGdC,GAAI,CACFH,WAAY,IACZC,WAAY,IACZG,UAAW,OACXC,aAAc,OACdH,WAAY,aAGdI,GAAI,CACFD,aAAc,OAGhBE,GAAI,CACFF,aAAc,SAKpB,IAAMG,EAAa,IAAIC,IAAWjB,KAOnBgB,IACF/B,EAAS+B,EAAW/B,OACZ+B,EAAWE","file":"component---src-pages-about-tsx-412bccc0cf8641cb4fb6.js","sourcesContent":["import React, { useState } from 'react'\nimport { graphql } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\nimport * as Lang from '../constants'\n\ntype AboutPageProps = {\n  data: any\n}\n\nconst AboutPage = ({ data }: AboutPageProps) => {\n  const [lang] = useState(Lang.ENGLISH)\n  const resumes = data.allMarkdownRemark.edges\n\n  const resume = resumes\n    .filter(({ node }: any) => node.frontmatter.lang === lang)\n    .map(({ node }: any) => node)[0]\n\n  return (\n    <div\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(24),\n        padding: `${rhythm(0.5)} ${rhythm(3 / 4)} ${rhythm(1.5)} ${rhythm(\n          3 / 4,\n        )}`,\n      }}\n    >\n      <div dangerouslySetInnerHTML={{ __html: resume.html }} />\n    </div>\n  )\n}\n\nexport default AboutPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(filter: { frontmatter: { category: { eq: null } } }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 160)\n          html\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            lang\n          }\n        }\n      }\n    }\n  }\n`\n","export const HOME_TITLE = 'Home'\n","import { EnumLiteralsOf } from '../types'\n\nexport type Themes = EnumLiteralsOf<typeof Themes>\nexport const Themes = Object.freeze({\n  DARK: 'dark' as 'dark',\n  LIGHT: 'light' as 'dark',\n})\n","export * from './meta'\nexport * from './lang'\nexport * from './themes'\n\nexport const DEFAULT_CATEGORY = 'All'\n","export const KOREAN = 'ko'\nexport const ENGLISH = 'en'\n","import Typography from 'typography'\nimport GitHubTheme from 'typography-theme-github'\n\nGitHubTheme.overrideThemeStyles = () => {\n  return {\n    a: {\n      boxShadow: `none`,\n      textDecoration: `none`,\n      color: `#0687f0`,\n    },\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n      textDecoration: `none`,\n    },\n\n    'a:hover': {\n      textDecoration: `none`,\n    },\n\n    h1: {\n      fontWeight: 800,\n      lineHeight: 1.2,\n      fontFamily: 'Catamaran',\n    },\n\n    h2: {\n      fontWeight: 700,\n      lineHeight: 1.2,\n      marginTop: '56px',\n      marginBottom: '20px',\n      fontFamily: 'Catamaran',\n    },\n\n    ul: {\n      marginBottom: '6px',\n    },\n\n    li: {\n      marginBottom: '2px',\n    },\n  }\n}\n\nconst typography = new Typography(GitHubTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n"],"sourceRoot":""}