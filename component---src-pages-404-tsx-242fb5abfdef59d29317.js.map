{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./src/types.ts","webpack:///./src/utils/dom.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/head/index.tsx","webpack:///./src/components/theme-switch/index.tsx","webpack:///./src/components/top/index.tsx","webpack:///./src/components/header/index.tsx","webpack:///./src/components/footer/index.tsx","webpack:///./src/layout/index.tsx"],"names":["NotFoundPage","render","data","this","props","pathPrefix","siteTitle","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_head__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","GitHubTheme","overrideThemeStyles","boxShadow","textDecoration","color","a.gatsby-resp-image-link","a:hover","h1","fontWeight","lineHeight","fontFamily","h2","marginTop","marginBottom","ul","li","typography","Typography","scale","m","module","exports","require","default","CategoryType","ThemeType","getElements","getElement","addClass","addClassToBody","removeClassToBody","hasClassOfBody","selector","document","querySelectorAll","querySelector","element","className","classList","add","getBody","remove","removeClass","contains","hasClass","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Head","description","_ref$lang","lang","_ref$meta","meta","_ref$keywords","keywords","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","ThemeSwitch","_useState","useState","checked","setChecked","handleChange","theme","DARK","LIGHT","getTheme","Dom","toggleTheme","useEffect","react_default","htmlFor","react_switch_default","onChange","id","height","width","checkedIcon","uncheckedIcon","offColor","offHandleColor","onColor","onHandleColor","Top","rootPath","isRoot","style","marginLeft","marginRight","maxWidth","gatsby_browser_entry","to","theme_switch_ThemeSwitch","Header","Fragment","Footer","href","layout_Layout","Layout","_ref$pathPrefix","top_Top","padding","header_Header","footer_Footer"],"mappings":"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","file":"component---src-pages-404-tsx-242fb5abfdef59d29317.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { Layout } from '../layout'\nimport { Head } from '../components/head'\n\ninterface NotFoundPageProps {\n  data: any\n  location: Location\n}\n\nclass NotFoundPage extends React.Component<NotFoundPageProps> {\n  render() {\n    const { data } = this.props\n    const { pathPrefix } = data\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout pathPrefix={pathPrefix} location={this.props.location} title={siteTitle}>\n        <Head title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      pathPrefix\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from 'typography'\nimport GitHubTheme from 'typography-theme-github'\n\nGitHubTheme.overrideThemeStyles = () => {\n  return {\n    a: {\n      boxShadow: `none`,\n      textDecoration: `none`,\n      color: `#0687f0`,\n    },\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n      textDecoration: `none`,\n    },\n\n    'a:hover': {\n      textDecoration: `none`,\n    },\n\n    h1: {\n      fontWeight: 800,\n      lineHeight: 1.2,\n      fontFamily: 'Catamaran',\n    },\n\n    h2: {\n      fontWeight: 700,\n      lineHeight: 1.2,\n      marginTop: '56px',\n      marginBottom: '20px',\n      fontFamily: 'Catamaran',\n    },\n\n    ul: {\n      marginBottom: '6px',\n    },\n\n    li: {\n      marginBottom: '2px',\n    },\n  }\n}\n\nconst typography = new Typography(GitHubTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","export enum CategoryType {\n  ALL = 'All'\n}\n\nexport enum ThemeType {\n  DARK = 'dark',\n  LIGHT = 'light'\n}\n\nexport interface Post {\n  node: string\n}\n","const BODY = 'body'\n\nexport const getElements = (selector: string) => document.querySelectorAll(selector)\nexport const getElement = (selector: string) => document.querySelector(selector)\nexport const addClass = (element: Element, className: string) => !!element ? element.classList.add(className) : null\nexport const removeClass = (element: Element, className: string) => element!.classList.remove(className)\nexport const hasClass = (element: Element, className: string) => element!.classList.contains(className)\nexport const getBody = () => getElement(BODY)\nexport const addClassToBody = (className: string) => addClass(getBody()!, className)\nexport const removeClassToBody = (className: string) => removeClass(getBody()!, className)\nexport const hasClassOfBody = (className: string) => hasClass(getBody()!, className)\nexport const getRect = (className: string) => getElement(className)!.getBoundingClientRect()\nexport const getPosY = (className: string) => getRect(className)!.top\n\nexport const getDocumentHeight = () => document.documentElement.offsetHeight\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface HeadProps {\n  description?: string,\n  lang?: string,\n  meta?: [],\n  keywords?: string[],\n  title: string,\n}\n\nexport const Head: React.FC<HeadProps> = ({ description, lang = 'en', meta = [], keywords = [], title }) => (\n  <StaticQuery\n    query={detailsQuery}\n    render={data => {\n      const metaDescription =\n        description || data.site.siteMetadata.description\n      return (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n          meta={[\n            {\n              name: `description`,\n              content: metaDescription,\n            },\n            {\n              property: `og:title`,\n              content: title,\n            },\n            {\n              property: `og:description`,\n              content: metaDescription,\n            },\n            {\n              property: `og:type`,\n              content: `website`,\n            },\n            {\n              name: `twitter:card`,\n              content: `summary`,\n            },\n            {\n              name: `twitter:creator`,\n              content: data.site.siteMetadata.author,\n            },\n            {\n              name: `twitter:title`,\n              content: title,\n            },\n            {\n              name: `twitter:description`,\n              content: metaDescription,\n            },\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                  name: `keywords`,\n                  content: keywords.join(`, `),\n                }\n                : []\n            )\n            .concat(meta)}\n        />\n      )\n    }}\n  />\n)\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { useState, useEffect } from 'react'\nimport Switch from 'react-switch'\n\nimport * as Dom from '../../utils/dom'\nimport { ThemeType } from '../../types'\n\nimport './index.scss'\n\nfunction getTheme(checked: boolean) {\n  return checked ? ThemeType.DARK : ThemeType.LIGHT\n}\n\nfunction toggleTheme(theme: ThemeType) {\n  switch (theme) {\n    case ThemeType.LIGHT: {\n      Dom.addClassToBody(ThemeType.LIGHT)\n      Dom.removeClassToBody(ThemeType.DARK)\n      break\n    }\n    case ThemeType.DARK: {\n      Dom.addClassToBody(ThemeType.DARK)\n      Dom.removeClassToBody(ThemeType.LIGHT)\n      break\n    }\n  }\n}\n\nexport const ThemeSwitch: React.FC = () => {\n  const [checked, setChecked] = useState(false)\n\n  const handleChange = (checked: boolean) => {\n    const theme = getTheme(checked)\n\n    setChecked(checked)\n    toggleTheme(theme)\n  }\n\n  useEffect(() => {\n    const checked = Dom.hasClassOfBody(ThemeType.DARK)\n\n    handleChange(checked)\n  }, [])\n\n  return (\n    <div className=\"switch-container\">\n      <label htmlFor=\"normal-switch\">\n        <Switch\n          onChange={handleChange}\n          checked={checked}\n          id=\"normal-switch\"\n          height={24}\n          width={48}\n          checkedIcon={<div className=\"icon checkedIcon\">D</div>}\n          uncheckedIcon={<div className=\"icon uncheckedIcon\">L</div>}\n          offColor={'#d9dfe2'}\n          offHandleColor={'#fff'}\n          onColor={'#999'}\n          onHandleColor={'#282c35'}\n        />\n      </label>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n// import { GitHubIcon } from '../social-share/github-icon'\nimport { rhythm } from '../../utils/typography'\nimport { ThemeSwitch } from '../theme-switch'\n\nimport './index.scss'\n\ninterface TopProps {\n  title: string\n  location: Location\n  rootPath: string\n}\n\nexport const Top: React.FC<TopProps> = ({ title, location, rootPath }) => {\n  const isRoot = location.pathname === rootPath\n  return (\n    <div\n      className=\"top\"\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(24),\n      }}\n    >\n      {!isRoot && (\n        <Link to={`/`} className=\"link\">\n          {title}\n        </Link>\n      )}\n      {/* <GitHubIcon /> */}\n      <ThemeSwitch />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport './index.scss'\n\ninterface HeaderProps {\n  title: string\n  location: Location\n  rootPath: string\n}\n\nexport const Header: React.FC<HeaderProps> = ({ title, location, rootPath }) => {\n  const isRoot = location.pathname === rootPath\n\n  return isRoot\n    ? (\n      <h1 className=\"home-header\">\n        <Link to={`/`} className=\"link\">\n          {title}\n        </Link>\n      </h1>\n    )\n    : (\n      <></>\n    )\n}\n","import React from 'react'\n\nimport './index.scss'\n\nexport const Footer = () => (\n  <footer className=\"footer\">\n    ©<a href=\"https://github.com/JoonsungUm\">Joonsung Um</a>, Built with{' '}\n    <a href=\"https://github.com/JaeYeopHan/gatsby-starter-bee\">\n      Gatsby-starter-bee\n    </a>\n  </footer>\n)\n","import React from 'react'\n\nimport { Top } from '../components/top'\nimport { Header } from '../components/header'\nimport { Footer } from '../components/footer'\nimport { rhythm } from '../utils/typography'\n\nimport './index.scss'\n\ninterface LayoutProps {\n  pathPrefix: string\n  location: any\n  title: string\n}\n\nexport const Layout: React.FC<LayoutProps> = ({ pathPrefix = `/`, location, title, children }) => (\n  <React.Fragment>\n    <Top title={title} location={location} rootPath={pathPrefix} />\n    <div\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(24),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <Header title={title} location={location} rootPath={pathPrefix} />\n      {children}\n      <Footer />\n    </div>\n  </React.Fragment>\n)\n\n"],"sourceRoot":""}